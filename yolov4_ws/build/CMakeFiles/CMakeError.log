Determining if the pthread_create exist failed with the following output:
Change Dir: /home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_9cdf4/fast"
/usr/bin/make -f CMakeFiles/cmTC_9cdf4.dir/build.make CMakeFiles/cmTC_9cdf4.dir/build
make[1]: 进入目录“/home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_9cdf4.dir/CheckSymbolExists.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_9cdf4.dir/CheckSymbolExists.c.o   -c /home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_9cdf4
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9cdf4.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_9cdf4.dir/CheckSymbolExists.c.o  -o cmTC_9cdf4 
CMakeFiles/cmTC_9cdf4.dir/CheckSymbolExists.c.o：在函数‘main’中：
CheckSymbolExists.c:(.text+0x1b)：对‘pthread_create’未定义的引用
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_9cdf4.dir/build.make:97: recipe for target 'cmTC_9cdf4' failed
make[1]: *** [cmTC_9cdf4] Error 1
make[1]: 离开目录“/home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp”
Makefile:126: recipe for target 'cmTC_9cdf4/fast' failed
make: *** [cmTC_9cdf4/fast] Error 2

File /home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_073fa/fast"
/usr/bin/make -f CMakeFiles/cmTC_073fa.dir/build.make CMakeFiles/cmTC_073fa.dir/build
make[1]: 进入目录“/home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_073fa.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTC_073fa.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.10/Modules/CheckFunctionExists.c
Linking C executable cmTC_073fa
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_073fa.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    -rdynamic CMakeFiles/cmTC_073fa.dir/CheckFunctionExists.c.o  -o cmTC_073fa -lpthreads 
/usr/bin/ld: 找不到 -lpthreads
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_073fa.dir/build.make:97: recipe for target 'cmTC_073fa' failed
make[1]: *** [cmTC_073fa] Error 1
make[1]: 离开目录“/home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp”
Makefile:126: recipe for target 'cmTC_073fa/fast' failed
make: *** [cmTC_073fa/fast] Error 2


Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make -f Makefile cmTC_ab7c0/fast && /usr/bin/make  -f CMakeFiles/cmTC_ab7c0.dir/build.make CMakeFiles/cmTC_ab7c0.dir/build
make[1]: 进入目录“/home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_ab7c0.dir/src.c.o
/usr/bin/cc -DCMAKE_HAVE_LIBC_PTHREAD   -o CMakeFiles/cmTC_ab7c0.dir/src.c.o -c /home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_ab7c0
/usr/local/cmake/cmake-3.20.0-linux-x86_64/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ab7c0.dir/link.txt --verbose=1
/usr/bin/cc -rdynamic CMakeFiles/cmTC_ab7c0.dir/src.c.o -o cmTC_ab7c0 
CMakeFiles/cmTC_ab7c0.dir/src.c.o：在函数‘main’中：
src.c:(.text+0x3e)：对‘pthread_create’未定义的引用
src.c:(.text+0x4a)：对‘pthread_detach’未定义的引用
src.c:(.text+0x56)：对‘pthread_cancel’未定义的引用
src.c:(.text+0x67)：对‘pthread_join’未定义的引用
src.c:(.text+0x7b)：对‘pthread_atfork’未定义的引用
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_ab7c0.dir/build.make:98: recipe for target 'cmTC_ab7c0' failed
make[1]: *** [cmTC_ab7c0] Error 1
make[1]: 离开目录“/home/xhu-fsac/yolov4_ws/build/CMakeFiles/CMakeTmp”
Makefile:127: recipe for target 'cmTC_ab7c0/fast' failed
make: *** [cmTC_ab7c0/fast] Error 2


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

